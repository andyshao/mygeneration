
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================

' Generated by MyGeneration Version # (1.1.3.5)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public Class Invoices
	Inherits SqlClientEntity

	Public Sub New()
		Me.QuerySource = "Invoices"
		Me.MappingName = "Invoices"
	End Sub

	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
		Return MyBase.Query.Load()
	End Function

	Public Overrides Sub FlushData()
		Me._whereClause = Nothing
		Me._aggregateClause = Nothing
		MyBase.FlushData()
	End Sub

#Region "Parameters"
	Protected Class Parameters

		Public Shared ReadOnly Property ShipName() As SqlParameter
			Get
				Return New SqlParameter("ShipName", SqlDbType.NVarChar, 40)
			End Get
		End Property

		Public Shared ReadOnly Property ShipAddress() As SqlParameter
			Get
				Return New SqlParameter("ShipAddress", SqlDbType.NVarChar, 60)
			End Get
		End Property

		Public Shared ReadOnly Property ShipCity() As SqlParameter
			Get
				Return New SqlParameter("ShipCity", SqlDbType.NVarChar, 15)
			End Get
		End Property

		Public Shared ReadOnly Property ShipRegion() As SqlParameter
			Get
				Return New SqlParameter("ShipRegion", SqlDbType.NVarChar, 15)
			End Get
		End Property

		Public Shared ReadOnly Property ShipPostalCode() As SqlParameter
			Get
				Return New SqlParameter("ShipPostalCode", SqlDbType.NVarChar, 10)
			End Get
		End Property

		Public Shared ReadOnly Property ShipCountry() As SqlParameter
			Get
				Return New SqlParameter("ShipCountry", SqlDbType.NVarChar, 15)
			End Get
		End Property

		Public Shared ReadOnly Property CustomerID() As SqlParameter
			Get
				Return New SqlParameter("CustomerID", SqlDbType.NChar, 5)
			End Get
		End Property

		Public Shared ReadOnly Property CustomerName() As SqlParameter
			Get
				Return New SqlParameter("CustomerName", SqlDbType.NVarChar, 40)
			End Get
		End Property

		Public Shared ReadOnly Property Address() As SqlParameter
			Get
				Return New SqlParameter("Address", SqlDbType.NVarChar, 60)
			End Get
		End Property

		Public Shared ReadOnly Property City() As SqlParameter
			Get
				Return New SqlParameter("City", SqlDbType.NVarChar, 15)
			End Get
		End Property

		Public Shared ReadOnly Property Region() As SqlParameter
			Get
				Return New SqlParameter("Region", SqlDbType.NVarChar, 15)
			End Get
		End Property

		Public Shared ReadOnly Property PostalCode() As SqlParameter
			Get
				Return New SqlParameter("PostalCode", SqlDbType.NVarChar, 10)
			End Get
		End Property

		Public Shared ReadOnly Property Country() As SqlParameter
			Get
				Return New SqlParameter("Country", SqlDbType.NVarChar, 15)
			End Get
		End Property

		Public Shared ReadOnly Property Salesperson() As SqlParameter
			Get
				Return New SqlParameter("Salesperson", SqlDbType.NVarChar, 31)
			End Get
		End Property

		Public Shared ReadOnly Property OrderID() As SqlParameter
			Get
				Return New SqlParameter("OrderID", SqlDbType.Int, 0)
			End Get
		End Property

		Public Shared ReadOnly Property OrderDate() As SqlParameter
			Get
				Return New SqlParameter("OrderDate", SqlDbType.DateTime, 0)
			End Get
		End Property

		Public Shared ReadOnly Property RequiredDate() As SqlParameter
			Get
				Return New SqlParameter("RequiredDate", SqlDbType.DateTime, 0)
			End Get
		End Property

		Public Shared ReadOnly Property ShippedDate() As SqlParameter
			Get
				Return New SqlParameter("ShippedDate", SqlDbType.DateTime, 0)
			End Get
		End Property

		Public Shared ReadOnly Property ShipperName() As SqlParameter
			Get
				Return New SqlParameter("ShipperName", SqlDbType.NVarChar, 40)
			End Get
		End Property

		Public Shared ReadOnly Property ProductID() As SqlParameter
			Get
				Return New SqlParameter("ProductID", SqlDbType.Int, 0)
			End Get
		End Property

		Public Shared ReadOnly Property ProductName() As SqlParameter
			Get
				Return New SqlParameter("ProductName", SqlDbType.NVarChar, 40)
			End Get
		End Property

		Public Shared ReadOnly Property UnitPrice() As SqlParameter
			Get
				Return New SqlParameter("UnitPrice", SqlDbType.Money, 0)
			End Get
		End Property

		Public Shared ReadOnly Property Quantity() As SqlParameter
			Get
				Return New SqlParameter("Quantity", SqlDbType.SmallInt, 0)
			End Get
		End Property

		Public Shared ReadOnly Property Discount() As SqlParameter
			Get
				Return New SqlParameter("Discount", SqlDbType.Real, 0)
			End Get
		End Property

		Public Shared ReadOnly Property ExtendedPrice() As SqlParameter
			Get
				Return New SqlParameter("ExtendedPrice", SqlDbType.Money, 0)
			End Get
		End Property

		Public Shared ReadOnly Property Freight() As SqlParameter
			Get
				Return New SqlParameter("Freight", SqlDbType.Money, 0)
			End Get
		End Property

	End Class
#End Region

#Region "ColumnNames"
	Public Class ColumnNames

		Public Const ShipName As String = "ShipName"
		Public Const ShipAddress As String = "ShipAddress"
		Public Const ShipCity As String = "ShipCity"
		Public Const ShipRegion As String = "ShipRegion"
		Public Const ShipPostalCode As String = "ShipPostalCode"
		Public Const ShipCountry As String = "ShipCountry"
		Public Const CustomerID As String = "CustomerID"
		Public Const CustomerName As String = "CustomerName"
		Public Const Address As String = "Address"
		Public Const City As String = "City"
		Public Const Region As String = "Region"
		Public Const PostalCode As String = "PostalCode"
		Public Const Country As String = "Country"
		Public Const Salesperson As String = "Salesperson"
		Public Const OrderID As String = "OrderID"
		Public Const OrderDate As String = "OrderDate"
		Public Const RequiredDate As String = "RequiredDate"
		Public Const ShippedDate As String = "ShippedDate"
		Public Const ShipperName As String = "ShipperName"
		Public Const ProductID As String = "ProductID"
		Public Const ProductName As String = "ProductName"
		Public Const UnitPrice As String = "UnitPrice"
		Public Const Quantity As String = "Quantity"
		Public Const Discount As String = "Discount"
		Public Const ExtendedPrice As String = "ExtendedPrice"
		Public Const Freight As String = "Freight"

		Public Shared Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then

				ht = New Hashtable

				ht(ShipName) = Invoices.PropertyNames.ShipName
				ht(ShipAddress) = Invoices.PropertyNames.ShipAddress
				ht(ShipCity) = Invoices.PropertyNames.ShipCity
				ht(ShipRegion) = Invoices.PropertyNames.ShipRegion
				ht(ShipPostalCode) = Invoices.PropertyNames.ShipPostalCode
				ht(ShipCountry) = Invoices.PropertyNames.ShipCountry
				ht(CustomerID) = Invoices.PropertyNames.CustomerID
				ht(CustomerName) = Invoices.PropertyNames.CustomerName
				ht(Address) = Invoices.PropertyNames.Address
				ht(City) = Invoices.PropertyNames.City
				ht(Region) = Invoices.PropertyNames.Region
				ht(PostalCode) = Invoices.PropertyNames.PostalCode
				ht(Country) = Invoices.PropertyNames.Country
				ht(Salesperson) = Invoices.PropertyNames.Salesperson
				ht(OrderID) = Invoices.PropertyNames.OrderID
				ht(OrderDate) = Invoices.PropertyNames.OrderDate
				ht(RequiredDate) = Invoices.PropertyNames.RequiredDate
				ht(ShippedDate) = Invoices.PropertyNames.ShippedDate
				ht(ShipperName) = Invoices.PropertyNames.ShipperName
				ht(ProductID) = Invoices.PropertyNames.ProductID
				ht(ProductName) = Invoices.PropertyNames.ProductName
				ht(UnitPrice) = Invoices.PropertyNames.UnitPrice
				ht(Quantity) = Invoices.PropertyNames.Quantity
				ht(Discount) = Invoices.PropertyNames.Discount
				ht(ExtendedPrice) = Invoices.PropertyNames.ExtendedPrice
				ht(Freight) = Invoices.PropertyNames.Freight

			End If

			Return CType(ht(columnName), String)

		End Function

		Private Shared ht As Hashtable = Nothing
	End Class
#End Region

#Region "PropertyNames"
	Public Class PropertyNames

		Public Const ShipName As String = "ShipName"
		Public Const ShipAddress As String = "ShipAddress"
		Public Const ShipCity As String = "ShipCity"
		Public Const ShipRegion As String = "ShipRegion"
		Public Const ShipPostalCode As String = "ShipPostalCode"
		Public Const ShipCountry As String = "ShipCountry"
		Public Const CustomerID As String = "CustomerID"
		Public Const CustomerName As String = "CustomerName"
		Public Const Address As String = "Address"
		Public Const City As String = "City"
		Public Const Region As String = "Region"
		Public Const PostalCode As String = "PostalCode"
		Public Const Country As String = "Country"
		Public Const Salesperson As String = "Salesperson"
		Public Const OrderID As String = "OrderID"
		Public Const OrderDate As String = "OrderDate"
		Public Const RequiredDate As String = "RequiredDate"
		Public Const ShippedDate As String = "ShippedDate"
		Public Const ShipperName As String = "ShipperName"
		Public Const ProductID As String = "ProductID"
		Public Const ProductName As String = "ProductName"
		Public Const UnitPrice As String = "UnitPrice"
		Public Const Quantity As String = "Quantity"
		Public Const Discount As String = "Discount"
		Public Const ExtendedPrice As String = "ExtendedPrice"
		Public Const Freight As String = "Freight"

		Public Shared Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then

				ht = New Hashtable

				ht(ShipName) = Invoices.ColumnNames.ShipName
				ht(ShipAddress) = Invoices.ColumnNames.ShipAddress
				ht(ShipCity) = Invoices.ColumnNames.ShipCity
				ht(ShipRegion) = Invoices.ColumnNames.ShipRegion
				ht(ShipPostalCode) = Invoices.ColumnNames.ShipPostalCode
				ht(ShipCountry) = Invoices.ColumnNames.ShipCountry
				ht(CustomerID) = Invoices.ColumnNames.CustomerID
				ht(CustomerName) = Invoices.ColumnNames.CustomerName
				ht(Address) = Invoices.ColumnNames.Address
				ht(City) = Invoices.ColumnNames.City
				ht(Region) = Invoices.ColumnNames.Region
				ht(PostalCode) = Invoices.ColumnNames.PostalCode
				ht(Country) = Invoices.ColumnNames.Country
				ht(Salesperson) = Invoices.ColumnNames.Salesperson
				ht(OrderID) = Invoices.ColumnNames.OrderID
				ht(OrderDate) = Invoices.ColumnNames.OrderDate
				ht(RequiredDate) = Invoices.ColumnNames.RequiredDate
				ht(ShippedDate) = Invoices.ColumnNames.ShippedDate
				ht(ShipperName) = Invoices.ColumnNames.ShipperName
				ht(ProductID) = Invoices.ColumnNames.ProductID
				ht(ProductName) = Invoices.ColumnNames.ProductName
				ht(UnitPrice) = Invoices.ColumnNames.UnitPrice
				ht(Quantity) = Invoices.ColumnNames.Quantity
				ht(Discount) = Invoices.ColumnNames.Discount
				ht(ExtendedPrice) = Invoices.ColumnNames.ExtendedPrice
				ht(Freight) = Invoices.ColumnNames.Freight

			End If

			Return CType(ht(propertyName), String)

		End Function

		Private Shared ht As Hashtable = Nothing

	End Class
#End Region

#Region "StringPropertyNames"
	Public Class StringPropertyNames

		Public Const ShipName As String = "s_ShipName"
		Public Const ShipAddress As String = "s_ShipAddress"
		Public Const ShipCity As String = "s_ShipCity"
		Public Const ShipRegion As String = "s_ShipRegion"
		Public Const ShipPostalCode As String = "s_ShipPostalCode"
		Public Const ShipCountry As String = "s_ShipCountry"
		Public Const CustomerID As String = "s_CustomerID"
		Public Const CustomerName As String = "s_CustomerName"
		Public Const Address As String = "s_Address"
		Public Const City As String = "s_City"
		Public Const Region As String = "s_Region"
		Public Const PostalCode As String = "s_PostalCode"
		Public Const Country As String = "s_Country"
		Public Const Salesperson As String = "s_Salesperson"
		Public Const OrderID As String = "s_OrderID"
		Public Const OrderDate As String = "s_OrderDate"
		Public Const RequiredDate As String = "s_RequiredDate"
		Public Const ShippedDate As String = "s_ShippedDate"
		Public Const ShipperName As String = "s_ShipperName"
		Public Const ProductID As String = "s_ProductID"
		Public Const ProductName As String = "s_ProductName"
		Public Const UnitPrice As String = "s_UnitPrice"
		Public Const Quantity As String = "s_Quantity"
		Public Const Discount As String = "s_Discount"
		Public Const ExtendedPrice As String = "s_ExtendedPrice"
		Public Const Freight As String = "s_Freight"

	End Class
#End Region

#Region "Properties"
	Public Overridable Property ShipName() As String
		Get
			Return MyBase.GetString(ColumnNames.ShipName)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.ShipName, Value)
		End Set
	End Property

	Public Overridable Property ShipAddress() As String
		Get
			Return MyBase.GetString(ColumnNames.ShipAddress)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.ShipAddress, Value)
		End Set
	End Property

	Public Overridable Property ShipCity() As String
		Get
			Return MyBase.GetString(ColumnNames.ShipCity)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.ShipCity, Value)
		End Set
	End Property

	Public Overridable Property ShipRegion() As String
		Get
			Return MyBase.GetString(ColumnNames.ShipRegion)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.ShipRegion, Value)
		End Set
	End Property

	Public Overridable Property ShipPostalCode() As String
		Get
			Return MyBase.GetString(ColumnNames.ShipPostalCode)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.ShipPostalCode, Value)
		End Set
	End Property

	Public Overridable Property ShipCountry() As String
		Get
			Return MyBase.GetString(ColumnNames.ShipCountry)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.ShipCountry, Value)
		End Set
	End Property

	Public Overridable Property CustomerID() As String
		Get
			Return MyBase.GetString(ColumnNames.CustomerID)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.CustomerID, Value)
		End Set
	End Property

	Public Overridable Property CustomerName() As String
		Get
			Return MyBase.GetString(ColumnNames.CustomerName)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.CustomerName, Value)
		End Set
	End Property

	Public Overridable Property Address() As String
		Get
			Return MyBase.GetString(ColumnNames.Address)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.Address, Value)
		End Set
	End Property

	Public Overridable Property City() As String
		Get
			Return MyBase.GetString(ColumnNames.City)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.City, Value)
		End Set
	End Property

	Public Overridable Property Region() As String
		Get
			Return MyBase.GetString(ColumnNames.Region)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.Region, Value)
		End Set
	End Property

	Public Overridable Property PostalCode() As String
		Get
			Return MyBase.GetString(ColumnNames.PostalCode)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.PostalCode, Value)
		End Set
	End Property

	Public Overridable Property Country() As String
		Get
			Return MyBase.GetString(ColumnNames.Country)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.Country, Value)
		End Set
	End Property

	Public Overridable Property Salesperson() As String
		Get
			Return MyBase.GetString(ColumnNames.Salesperson)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.Salesperson, Value)
		End Set
	End Property

	Public Overridable Property OrderID() As Integer
		Get
			Return MyBase.GetInteger(ColumnNames.OrderID)
		End Get
		Set(ByVal Value As Integer)
			MyBase.SetInteger(ColumnNames.OrderID, Value)
		End Set
	End Property

	Public Overridable Property OrderDate() As DateTime
		Get
			Return MyBase.GetDateTime(ColumnNames.OrderDate)
		End Get
		Set(ByVal Value As DateTime)
			MyBase.SetDateTime(ColumnNames.OrderDate, Value)
		End Set
	End Property

	Public Overridable Property RequiredDate() As DateTime
		Get
			Return MyBase.GetDateTime(ColumnNames.RequiredDate)
		End Get
		Set(ByVal Value As DateTime)
			MyBase.SetDateTime(ColumnNames.RequiredDate, Value)
		End Set
	End Property

	Public Overridable Property ShippedDate() As DateTime
		Get
			Return MyBase.GetDateTime(ColumnNames.ShippedDate)
		End Get
		Set(ByVal Value As DateTime)
			MyBase.SetDateTime(ColumnNames.ShippedDate, Value)
		End Set
	End Property

	Public Overridable Property ShipperName() As String
		Get
			Return MyBase.GetString(ColumnNames.ShipperName)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.ShipperName, Value)
		End Set
	End Property

	Public Overridable Property ProductID() As Integer
		Get
			Return MyBase.GetInteger(ColumnNames.ProductID)
		End Get
		Set(ByVal Value As Integer)
			MyBase.SetInteger(ColumnNames.ProductID, Value)
		End Set
	End Property

	Public Overridable Property ProductName() As String
		Get
			Return MyBase.GetString(ColumnNames.ProductName)
		End Get
		Set(ByVal Value As String)
			MyBase.SetString(ColumnNames.ProductName, Value)
		End Set
	End Property

	Public Overridable Property UnitPrice() As Decimal
		Get
			Return MyBase.GetDecimal(ColumnNames.UnitPrice)
		End Get
		Set(ByVal Value As Decimal)
			MyBase.SetDecimal(ColumnNames.UnitPrice, Value)
		End Set
	End Property

	Public Overridable Property Quantity() As Short
		Get
			Return MyBase.GetShort(ColumnNames.Quantity)
		End Get
		Set(ByVal Value As Short)
			MyBase.SetShort(ColumnNames.Quantity, Value)
		End Set
	End Property

	Public Overridable Property Discount() As Single
		Get
			Return MyBase.GetSingle(ColumnNames.Discount)
		End Get
		Set(ByVal Value As Single)
			MyBase.SetSingle(ColumnNames.Discount, Value)
		End Set
	End Property

	Public Overridable Property ExtendedPrice() As Decimal
		Get
			Return MyBase.GetDecimal(ColumnNames.ExtendedPrice)
		End Get
		Set(ByVal Value As Decimal)
			MyBase.SetDecimal(ColumnNames.ExtendedPrice, Value)
		End Set
	End Property

	Public Overridable Property Freight() As Decimal
		Get
			Return MyBase.GetDecimal(ColumnNames.Freight)
		End Get
		Set(ByVal Value As Decimal)
			MyBase.SetDecimal(ColumnNames.Freight, Value)
		End Set
	End Property


#End Region

#Region "String Properties"

	Public Overridable Property s_ShipName() As String
		Get
			If Me.IsColumnNull(ColumnNames.ShipName) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.ShipName)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ShipName)
			Else
				Me.ShipName = MyBase.SetStringAsString(ColumnNames.ShipName, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ShipAddress() As String
		Get
			If Me.IsColumnNull(ColumnNames.ShipAddress) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.ShipAddress)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ShipAddress)
			Else
				Me.ShipAddress = MyBase.SetStringAsString(ColumnNames.ShipAddress, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ShipCity() As String
		Get
			If Me.IsColumnNull(ColumnNames.ShipCity) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.ShipCity)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ShipCity)
			Else
				Me.ShipCity = MyBase.SetStringAsString(ColumnNames.ShipCity, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ShipRegion() As String
		Get
			If Me.IsColumnNull(ColumnNames.ShipRegion) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.ShipRegion)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ShipRegion)
			Else
				Me.ShipRegion = MyBase.SetStringAsString(ColumnNames.ShipRegion, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ShipPostalCode() As String
		Get
			If Me.IsColumnNull(ColumnNames.ShipPostalCode) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.ShipPostalCode)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ShipPostalCode)
			Else
				Me.ShipPostalCode = MyBase.SetStringAsString(ColumnNames.ShipPostalCode, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ShipCountry() As String
		Get
			If Me.IsColumnNull(ColumnNames.ShipCountry) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.ShipCountry)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ShipCountry)
			Else
				Me.ShipCountry = MyBase.SetStringAsString(ColumnNames.ShipCountry, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_CustomerID() As String
		Get
			If Me.IsColumnNull(ColumnNames.CustomerID) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.CustomerID)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.CustomerID)
			Else
				Me.CustomerID = MyBase.SetStringAsString(ColumnNames.CustomerID, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_CustomerName() As String
		Get
			If Me.IsColumnNull(ColumnNames.CustomerName) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.CustomerName)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.CustomerName)
			Else
				Me.CustomerName = MyBase.SetStringAsString(ColumnNames.CustomerName, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_Address() As String
		Get
			If Me.IsColumnNull(ColumnNames.Address) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.Address)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.Address)
			Else
				Me.Address = MyBase.SetStringAsString(ColumnNames.Address, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_City() As String
		Get
			If Me.IsColumnNull(ColumnNames.City) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.City)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.City)
			Else
				Me.City = MyBase.SetStringAsString(ColumnNames.City, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_Region() As String
		Get
			If Me.IsColumnNull(ColumnNames.Region) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.Region)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.Region)
			Else
				Me.Region = MyBase.SetStringAsString(ColumnNames.Region, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_PostalCode() As String
		Get
			If Me.IsColumnNull(ColumnNames.PostalCode) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.PostalCode)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.PostalCode)
			Else
				Me.PostalCode = MyBase.SetStringAsString(ColumnNames.PostalCode, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_Country() As String
		Get
			If Me.IsColumnNull(ColumnNames.Country) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.Country)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.Country)
			Else
				Me.Country = MyBase.SetStringAsString(ColumnNames.Country, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_Salesperson() As String
		Get
			If Me.IsColumnNull(ColumnNames.Salesperson) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.Salesperson)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.Salesperson)
			Else
				Me.Salesperson = MyBase.SetStringAsString(ColumnNames.Salesperson, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_OrderID() As String
		Get
			If Me.IsColumnNull(ColumnNames.OrderID) Then
				Return String.Empty
			Else
				Return MyBase.GetIntegerAsString(ColumnNames.OrderID)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.OrderID)
			Else
				Me.OrderID = MyBase.SetIntegerAsString(ColumnNames.OrderID, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_OrderDate() As String
		Get
			If Me.IsColumnNull(ColumnNames.OrderDate) Then
				Return String.Empty
			Else
				Return MyBase.GetDateTimeAsString(ColumnNames.OrderDate)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.OrderDate)
			Else
				Me.OrderDate = MyBase.SetDateTimeAsString(ColumnNames.OrderDate, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_RequiredDate() As String
		Get
			If Me.IsColumnNull(ColumnNames.RequiredDate) Then
				Return String.Empty
			Else
				Return MyBase.GetDateTimeAsString(ColumnNames.RequiredDate)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.RequiredDate)
			Else
				Me.RequiredDate = MyBase.SetDateTimeAsString(ColumnNames.RequiredDate, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ShippedDate() As String
		Get
			If Me.IsColumnNull(ColumnNames.ShippedDate) Then
				Return String.Empty
			Else
				Return MyBase.GetDateTimeAsString(ColumnNames.ShippedDate)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ShippedDate)
			Else
				Me.ShippedDate = MyBase.SetDateTimeAsString(ColumnNames.ShippedDate, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ShipperName() As String
		Get
			If Me.IsColumnNull(ColumnNames.ShipperName) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.ShipperName)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ShipperName)
			Else
				Me.ShipperName = MyBase.SetStringAsString(ColumnNames.ShipperName, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ProductID() As String
		Get
			If Me.IsColumnNull(ColumnNames.ProductID) Then
				Return String.Empty
			Else
				Return MyBase.GetIntegerAsString(ColumnNames.ProductID)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ProductID)
			Else
				Me.ProductID = MyBase.SetIntegerAsString(ColumnNames.ProductID, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ProductName() As String
		Get
			If Me.IsColumnNull(ColumnNames.ProductName) Then
				Return String.Empty
			Else
				Return MyBase.GetStringAsString(ColumnNames.ProductName)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ProductName)
			Else
				Me.ProductName = MyBase.SetStringAsString(ColumnNames.ProductName, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_UnitPrice() As String
		Get
			If Me.IsColumnNull(ColumnNames.UnitPrice) Then
				Return String.Empty
			Else
				Return MyBase.GetDecimalAsString(ColumnNames.UnitPrice)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.UnitPrice)
			Else
				Me.UnitPrice = MyBase.SetDecimalAsString(ColumnNames.UnitPrice, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_Quantity() As String
		Get
			If Me.IsColumnNull(ColumnNames.Quantity) Then
				Return String.Empty
			Else
				Return MyBase.GetShortAsString(ColumnNames.Quantity)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.Quantity)
			Else
				Me.Quantity = MyBase.SetShortAsString(ColumnNames.Quantity, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_Discount() As String
		Get
			If Me.IsColumnNull(ColumnNames.Discount) Then
				Return String.Empty
			Else
				Return MyBase.GetSingleAsString(ColumnNames.Discount)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.Discount)
			Else
				Me.Discount = MyBase.SetSingleAsString(ColumnNames.Discount, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_ExtendedPrice() As String
		Get
			If Me.IsColumnNull(ColumnNames.ExtendedPrice) Then
				Return String.Empty
			Else
				Return MyBase.GetDecimalAsString(ColumnNames.ExtendedPrice)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.ExtendedPrice)
			Else
				Me.ExtendedPrice = MyBase.SetDecimalAsString(ColumnNames.ExtendedPrice, Value)
			End If
		End Set
	End Property

	Public Overridable Property s_Freight() As String
		Get
			If Me.IsColumnNull(ColumnNames.Freight) Then
				Return String.Empty
			Else
				Return MyBase.GetDecimalAsString(ColumnNames.Freight)
			End If
		End Get
		Set(ByVal Value As String)
			If String.Empty = value Then
				Me.SetColumnNull(ColumnNames.Freight)
			Else
				Me.Freight = MyBase.SetDecimalAsString(ColumnNames.Freight, Value)
			End If
		End Set
	End Property


#End Region

#Region "Where Clause"
	Public Class WhereClause

		Public Sub New(ByVal entity As BusinessEntity)
			Me._entity = entity
		End Sub

		Public ReadOnly Property TearOff() As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = New TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

#Region "TearOff's"
		Public Class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub


			Public ReadOnly Property ShipName() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ShipName, Parameters.ShipName)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipAddress() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ShipAddress, Parameters.ShipAddress)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipCity() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ShipCity, Parameters.ShipCity)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipRegion() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ShipRegion, Parameters.ShipRegion)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipPostalCode() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ShipPostalCode, Parameters.ShipPostalCode)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipCountry() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ShipCountry, Parameters.ShipCountry)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property CustomerID() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.CustomerID, Parameters.CustomerID)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property CustomerName() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.CustomerName, Parameters.CustomerName)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Address() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Address, Parameters.Address)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property City() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.City, Parameters.City)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Region() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Region, Parameters.Region)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PostalCode() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PostalCode, Parameters.PostalCode)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Country() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Country, Parameters.Country)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Salesperson() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Salesperson, Parameters.Salesperson)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property OrderID() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.OrderID, Parameters.OrderID)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property OrderDate() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.OrderDate, Parameters.OrderDate)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property RequiredDate() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.RequiredDate, Parameters.RequiredDate)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShippedDate() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ShippedDate, Parameters.ShippedDate)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipperName() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ShipperName, Parameters.ShipperName)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ProductID() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ProductID, Parameters.ProductID)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ProductName() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ProductName, Parameters.ProductName)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property UnitPrice() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.UnitPrice, Parameters.UnitPrice)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Quantity() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Quantity, Parameters.Quantity)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Discount() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Discount, Parameters.Discount)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ExtendedPrice() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ExtendedPrice, Parameters.ExtendedPrice)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Freight() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.Freight, Parameters.Freight)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property


			Private _clause As WhereClause
		End Class
#End Region

		Public ReadOnly Property ShipName() As WhereParameter
			Get
				If _ShipName_W Is Nothing Then
					_ShipName_W = TearOff.ShipName
				End If
				Return _ShipName_W
			End Get
		End Property

		Public ReadOnly Property ShipAddress() As WhereParameter
			Get
				If _ShipAddress_W Is Nothing Then
					_ShipAddress_W = TearOff.ShipAddress
				End If
				Return _ShipAddress_W
			End Get
		End Property

		Public ReadOnly Property ShipCity() As WhereParameter
			Get
				If _ShipCity_W Is Nothing Then
					_ShipCity_W = TearOff.ShipCity
				End If
				Return _ShipCity_W
			End Get
		End Property

		Public ReadOnly Property ShipRegion() As WhereParameter
			Get
				If _ShipRegion_W Is Nothing Then
					_ShipRegion_W = TearOff.ShipRegion
				End If
				Return _ShipRegion_W
			End Get
		End Property

		Public ReadOnly Property ShipPostalCode() As WhereParameter
			Get
				If _ShipPostalCode_W Is Nothing Then
					_ShipPostalCode_W = TearOff.ShipPostalCode
				End If
				Return _ShipPostalCode_W
			End Get
		End Property

		Public ReadOnly Property ShipCountry() As WhereParameter
			Get
				If _ShipCountry_W Is Nothing Then
					_ShipCountry_W = TearOff.ShipCountry
				End If
				Return _ShipCountry_W
			End Get
		End Property

		Public ReadOnly Property CustomerID() As WhereParameter
			Get
				If _CustomerID_W Is Nothing Then
					_CustomerID_W = TearOff.CustomerID
				End If
				Return _CustomerID_W
			End Get
		End Property

		Public ReadOnly Property CustomerName() As WhereParameter
			Get
				If _CustomerName_W Is Nothing Then
					_CustomerName_W = TearOff.CustomerName
				End If
				Return _CustomerName_W
			End Get
		End Property

		Public ReadOnly Property Address() As WhereParameter
			Get
				If _Address_W Is Nothing Then
					_Address_W = TearOff.Address
				End If
				Return _Address_W
			End Get
		End Property

		Public ReadOnly Property City() As WhereParameter
			Get
				If _City_W Is Nothing Then
					_City_W = TearOff.City
				End If
				Return _City_W
			End Get
		End Property

		Public ReadOnly Property Region() As WhereParameter
			Get
				If _Region_W Is Nothing Then
					_Region_W = TearOff.Region
				End If
				Return _Region_W
			End Get
		End Property

		Public ReadOnly Property PostalCode() As WhereParameter
			Get
				If _PostalCode_W Is Nothing Then
					_PostalCode_W = TearOff.PostalCode
				End If
				Return _PostalCode_W
			End Get
		End Property

		Public ReadOnly Property Country() As WhereParameter
			Get
				If _Country_W Is Nothing Then
					_Country_W = TearOff.Country
				End If
				Return _Country_W
			End Get
		End Property

		Public ReadOnly Property Salesperson() As WhereParameter
			Get
				If _Salesperson_W Is Nothing Then
					_Salesperson_W = TearOff.Salesperson
				End If
				Return _Salesperson_W
			End Get
		End Property

		Public ReadOnly Property OrderID() As WhereParameter
			Get
				If _OrderID_W Is Nothing Then
					_OrderID_W = TearOff.OrderID
				End If
				Return _OrderID_W
			End Get
		End Property

		Public ReadOnly Property OrderDate() As WhereParameter
			Get
				If _OrderDate_W Is Nothing Then
					_OrderDate_W = TearOff.OrderDate
				End If
				Return _OrderDate_W
			End Get
		End Property

		Public ReadOnly Property RequiredDate() As WhereParameter
			Get
				If _RequiredDate_W Is Nothing Then
					_RequiredDate_W = TearOff.RequiredDate
				End If
				Return _RequiredDate_W
			End Get
		End Property

		Public ReadOnly Property ShippedDate() As WhereParameter
			Get
				If _ShippedDate_W Is Nothing Then
					_ShippedDate_W = TearOff.ShippedDate
				End If
				Return _ShippedDate_W
			End Get
		End Property

		Public ReadOnly Property ShipperName() As WhereParameter
			Get
				If _ShipperName_W Is Nothing Then
					_ShipperName_W = TearOff.ShipperName
				End If
				Return _ShipperName_W
			End Get
		End Property

		Public ReadOnly Property ProductID() As WhereParameter
			Get
				If _ProductID_W Is Nothing Then
					_ProductID_W = TearOff.ProductID
				End If
				Return _ProductID_W
			End Get
		End Property

		Public ReadOnly Property ProductName() As WhereParameter
			Get
				If _ProductName_W Is Nothing Then
					_ProductName_W = TearOff.ProductName
				End If
				Return _ProductName_W
			End Get
		End Property

		Public ReadOnly Property UnitPrice() As WhereParameter
			Get
				If _UnitPrice_W Is Nothing Then
					_UnitPrice_W = TearOff.UnitPrice
				End If
				Return _UnitPrice_W
			End Get
		End Property

		Public ReadOnly Property Quantity() As WhereParameter
			Get
				If _Quantity_W Is Nothing Then
					_Quantity_W = TearOff.Quantity
				End If
				Return _Quantity_W
			End Get
		End Property

		Public ReadOnly Property Discount() As WhereParameter
			Get
				If _Discount_W Is Nothing Then
					_Discount_W = TearOff.Discount
				End If
				Return _Discount_W
			End Get
		End Property

		Public ReadOnly Property ExtendedPrice() As WhereParameter
			Get
				If _ExtendedPrice_W Is Nothing Then
					_ExtendedPrice_W = TearOff.ExtendedPrice
				End If
				Return _ExtendedPrice_W
			End Get
		End Property

		Public ReadOnly Property Freight() As WhereParameter
			Get
				If _Freight_W Is Nothing Then
					_Freight_W = TearOff.Freight
				End If
				Return _Freight_W
			End Get
		End Property

		Private _ShipName_W As WhereParameter = Nothing
		Private _ShipAddress_W As WhereParameter = Nothing
		Private _ShipCity_W As WhereParameter = Nothing
		Private _ShipRegion_W As WhereParameter = Nothing
		Private _ShipPostalCode_W As WhereParameter = Nothing
		Private _ShipCountry_W As WhereParameter = Nothing
		Private _CustomerID_W As WhereParameter = Nothing
		Private _CustomerName_W As WhereParameter = Nothing
		Private _Address_W As WhereParameter = Nothing
		Private _City_W As WhereParameter = Nothing
		Private _Region_W As WhereParameter = Nothing
		Private _PostalCode_W As WhereParameter = Nothing
		Private _Country_W As WhereParameter = Nothing
		Private _Salesperson_W As WhereParameter = Nothing
		Private _OrderID_W As WhereParameter = Nothing
		Private _OrderDate_W As WhereParameter = Nothing
		Private _RequiredDate_W As WhereParameter = Nothing
		Private _ShippedDate_W As WhereParameter = Nothing
		Private _ShipperName_W As WhereParameter = Nothing
		Private _ProductID_W As WhereParameter = Nothing
		Private _ProductName_W As WhereParameter = Nothing
		Private _UnitPrice_W As WhereParameter = Nothing
		Private _Quantity_W As WhereParameter = Nothing
		Private _Discount_W As WhereParameter = Nothing
		Private _ExtendedPrice_W As WhereParameter = Nothing
		Private _Freight_W As WhereParameter = Nothing

		Public Sub WhereClauseReset()

			_ShipName_W = Nothing
			_ShipAddress_W = Nothing
			_ShipCity_W = Nothing
			_ShipRegion_W = Nothing
			_ShipPostalCode_W = Nothing
			_ShipCountry_W = Nothing
			_CustomerID_W = Nothing
			_CustomerName_W = Nothing
			_Address_W = Nothing
			_City_W = Nothing
			_Region_W = Nothing
			_PostalCode_W = Nothing
			_Country_W = Nothing
			_Salesperson_W = Nothing
			_OrderID_W = Nothing
			_OrderDate_W = Nothing
			_RequiredDate_W = Nothing
			_ShippedDate_W = Nothing
			_ShipperName_W = Nothing
			_ProductID_W = Nothing
			_ProductName_W = Nothing
			_UnitPrice_W = Nothing
			_Quantity_W = Nothing
			_Discount_W = Nothing
			_ExtendedPrice_W = Nothing
			_Freight_W = Nothing
			Me._entity.Query.FlushWhereParameters()

		End Sub

		Private _entity As BusinessEntity
		Private _tearOff As TearOffWhereParameter
	End Class

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If

			Return _whereClause
		End Get
	End Property

	Private _whereClause As WhereClause = Nothing
#End Region

#Region "Aggregate Clause"
	Public Class AggregateClause

		Public Sub New(ByVal entity As BusinessEntity)
			Me._entity = entity
		End Sub

		Public ReadOnly Property TearOff() As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = New TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

#Region "AggregateParameter TearOff's"
		Public Class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub


			Public ReadOnly Property ShipName() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ShipName, Parameters.ShipName)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipAddress() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ShipAddress, Parameters.ShipAddress)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipCity() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ShipCity, Parameters.ShipCity)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipRegion() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ShipRegion, Parameters.ShipRegion)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipPostalCode() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ShipPostalCode, Parameters.ShipPostalCode)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipCountry() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ShipCountry, Parameters.ShipCountry)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property CustomerID() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CustomerID, Parameters.CustomerID)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property CustomerName() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CustomerName, Parameters.CustomerName)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Address() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Address, Parameters.Address)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property City() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.City, Parameters.City)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Region() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Region, Parameters.Region)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PostalCode() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PostalCode, Parameters.PostalCode)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Country() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Country, Parameters.Country)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Salesperson() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Salesperson, Parameters.Salesperson)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property OrderID() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OrderID, Parameters.OrderID)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property OrderDate() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OrderDate, Parameters.OrderDate)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property RequiredDate() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.RequiredDate, Parameters.RequiredDate)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShippedDate() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ShippedDate, Parameters.ShippedDate)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ShipperName() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ShipperName, Parameters.ShipperName)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ProductID() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ProductID, Parameters.ProductID)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ProductName() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ProductName, Parameters.ProductName)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property UnitPrice() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.UnitPrice, Parameters.UnitPrice)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Quantity() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Quantity, Parameters.Quantity)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Discount() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Discount, Parameters.Discount)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ExtendedPrice() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ExtendedPrice, Parameters.ExtendedPrice)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property Freight() As AggregateParameter
				Get
					Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Freight, Parameters.Freight)
					Me._clause._entity.Query.AddAggregateParameter(where)
					Return where
				End Get
			End Property


			Private _clause As AggregateClause
		End Class
#End Region

		Public ReadOnly Property ShipName() As AggregateParameter
			Get
				If _ShipName_W Is Nothing Then
					_ShipName_W = TearOff.ShipName
				End If
				Return _ShipName_W
			End Get
		End Property

		Public ReadOnly Property ShipAddress() As AggregateParameter
			Get
				If _ShipAddress_W Is Nothing Then
					_ShipAddress_W = TearOff.ShipAddress
				End If
				Return _ShipAddress_W
			End Get
		End Property

		Public ReadOnly Property ShipCity() As AggregateParameter
			Get
				If _ShipCity_W Is Nothing Then
					_ShipCity_W = TearOff.ShipCity
				End If
				Return _ShipCity_W
			End Get
		End Property

		Public ReadOnly Property ShipRegion() As AggregateParameter
			Get
				If _ShipRegion_W Is Nothing Then
					_ShipRegion_W = TearOff.ShipRegion
				End If
				Return _ShipRegion_W
			End Get
		End Property

		Public ReadOnly Property ShipPostalCode() As AggregateParameter
			Get
				If _ShipPostalCode_W Is Nothing Then
					_ShipPostalCode_W = TearOff.ShipPostalCode
				End If
				Return _ShipPostalCode_W
			End Get
		End Property

		Public ReadOnly Property ShipCountry() As AggregateParameter
			Get
				If _ShipCountry_W Is Nothing Then
					_ShipCountry_W = TearOff.ShipCountry
				End If
				Return _ShipCountry_W
			End Get
		End Property

		Public ReadOnly Property CustomerID() As AggregateParameter
			Get
				If _CustomerID_W Is Nothing Then
					_CustomerID_W = TearOff.CustomerID
				End If
				Return _CustomerID_W
			End Get
		End Property

		Public ReadOnly Property CustomerName() As AggregateParameter
			Get
				If _CustomerName_W Is Nothing Then
					_CustomerName_W = TearOff.CustomerName
				End If
				Return _CustomerName_W
			End Get
		End Property

		Public ReadOnly Property Address() As AggregateParameter
			Get
				If _Address_W Is Nothing Then
					_Address_W = TearOff.Address
				End If
				Return _Address_W
			End Get
		End Property

		Public ReadOnly Property City() As AggregateParameter
			Get
				If _City_W Is Nothing Then
					_City_W = TearOff.City
				End If
				Return _City_W
			End Get
		End Property

		Public ReadOnly Property Region() As AggregateParameter
			Get
				If _Region_W Is Nothing Then
					_Region_W = TearOff.Region
				End If
				Return _Region_W
			End Get
		End Property

		Public ReadOnly Property PostalCode() As AggregateParameter
			Get
				If _PostalCode_W Is Nothing Then
					_PostalCode_W = TearOff.PostalCode
				End If
				Return _PostalCode_W
			End Get
		End Property

		Public ReadOnly Property Country() As AggregateParameter
			Get
				If _Country_W Is Nothing Then
					_Country_W = TearOff.Country
				End If
				Return _Country_W
			End Get
		End Property

		Public ReadOnly Property Salesperson() As AggregateParameter
			Get
				If _Salesperson_W Is Nothing Then
					_Salesperson_W = TearOff.Salesperson
				End If
				Return _Salesperson_W
			End Get
		End Property

		Public ReadOnly Property OrderID() As AggregateParameter
			Get
				If _OrderID_W Is Nothing Then
					_OrderID_W = TearOff.OrderID
				End If
				Return _OrderID_W
			End Get
		End Property

		Public ReadOnly Property OrderDate() As AggregateParameter
			Get
				If _OrderDate_W Is Nothing Then
					_OrderDate_W = TearOff.OrderDate
				End If
				Return _OrderDate_W
			End Get
		End Property

		Public ReadOnly Property RequiredDate() As AggregateParameter
			Get
				If _RequiredDate_W Is Nothing Then
					_RequiredDate_W = TearOff.RequiredDate
				End If
				Return _RequiredDate_W
			End Get
		End Property

		Public ReadOnly Property ShippedDate() As AggregateParameter
			Get
				If _ShippedDate_W Is Nothing Then
					_ShippedDate_W = TearOff.ShippedDate
				End If
				Return _ShippedDate_W
			End Get
		End Property

		Public ReadOnly Property ShipperName() As AggregateParameter
			Get
				If _ShipperName_W Is Nothing Then
					_ShipperName_W = TearOff.ShipperName
				End If
				Return _ShipperName_W
			End Get
		End Property

		Public ReadOnly Property ProductID() As AggregateParameter
			Get
				If _ProductID_W Is Nothing Then
					_ProductID_W = TearOff.ProductID
				End If
				Return _ProductID_W
			End Get
		End Property

		Public ReadOnly Property ProductName() As AggregateParameter
			Get
				If _ProductName_W Is Nothing Then
					_ProductName_W = TearOff.ProductName
				End If
				Return _ProductName_W
			End Get
		End Property

		Public ReadOnly Property UnitPrice() As AggregateParameter
			Get
				If _UnitPrice_W Is Nothing Then
					_UnitPrice_W = TearOff.UnitPrice
				End If
				Return _UnitPrice_W
			End Get
		End Property

		Public ReadOnly Property Quantity() As AggregateParameter
			Get
				If _Quantity_W Is Nothing Then
					_Quantity_W = TearOff.Quantity
				End If
				Return _Quantity_W
			End Get
		End Property

		Public ReadOnly Property Discount() As AggregateParameter
			Get
				If _Discount_W Is Nothing Then
					_Discount_W = TearOff.Discount
				End If
				Return _Discount_W
			End Get
		End Property

		Public ReadOnly Property ExtendedPrice() As AggregateParameter
			Get
				If _ExtendedPrice_W Is Nothing Then
					_ExtendedPrice_W = TearOff.ExtendedPrice
				End If
				Return _ExtendedPrice_W
			End Get
		End Property

		Public ReadOnly Property Freight() As AggregateParameter
			Get
				If _Freight_W Is Nothing Then
					_Freight_W = TearOff.Freight
				End If
				Return _Freight_W
			End Get
		End Property

		Private _ShipName_W As AggregateParameter = Nothing
		Private _ShipAddress_W As AggregateParameter = Nothing
		Private _ShipCity_W As AggregateParameter = Nothing
		Private _ShipRegion_W As AggregateParameter = Nothing
		Private _ShipPostalCode_W As AggregateParameter = Nothing
		Private _ShipCountry_W As AggregateParameter = Nothing
		Private _CustomerID_W As AggregateParameter = Nothing
		Private _CustomerName_W As AggregateParameter = Nothing
		Private _Address_W As AggregateParameter = Nothing
		Private _City_W As AggregateParameter = Nothing
		Private _Region_W As AggregateParameter = Nothing
		Private _PostalCode_W As AggregateParameter = Nothing
		Private _Country_W As AggregateParameter = Nothing
		Private _Salesperson_W As AggregateParameter = Nothing
		Private _OrderID_W As AggregateParameter = Nothing
		Private _OrderDate_W As AggregateParameter = Nothing
		Private _RequiredDate_W As AggregateParameter = Nothing
		Private _ShippedDate_W As AggregateParameter = Nothing
		Private _ShipperName_W As AggregateParameter = Nothing
		Private _ProductID_W As AggregateParameter = Nothing
		Private _ProductName_W As AggregateParameter = Nothing
		Private _UnitPrice_W As AggregateParameter = Nothing
		Private _Quantity_W As AggregateParameter = Nothing
		Private _Discount_W As AggregateParameter = Nothing
		Private _ExtendedPrice_W As AggregateParameter = Nothing
		Private _Freight_W As AggregateParameter = Nothing

		Public Sub AggregateClauseReset()

			_ShipName_W = Nothing
			_ShipAddress_W = Nothing
			_ShipCity_W = Nothing
			_ShipRegion_W = Nothing
			_ShipPostalCode_W = Nothing
			_ShipCountry_W = Nothing
			_CustomerID_W = Nothing
			_CustomerName_W = Nothing
			_Address_W = Nothing
			_City_W = Nothing
			_Region_W = Nothing
			_PostalCode_W = Nothing
			_Country_W = Nothing
			_Salesperson_W = Nothing
			_OrderID_W = Nothing
			_OrderDate_W = Nothing
			_RequiredDate_W = Nothing
			_ShippedDate_W = Nothing
			_ShipperName_W = Nothing
			_ProductID_W = Nothing
			_ProductName_W = Nothing
			_UnitPrice_W = Nothing
			_Quantity_W = Nothing
			_Discount_W = Nothing
			_ExtendedPrice_W = Nothing
			_Freight_W = Nothing
			Me._entity.Query.FlushAggregateParameters()

		End Sub

		Private _entity As BusinessEntity
		Private _tearOff As TearOffAggregateParameter
	End Class

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If

			Return _aggregateClause
		End Get
	End Property

	Private _aggregateClause As AggregateClause = Nothing
#End Region

	Protected Overrides Function GetInsertCommand() As IDbCommand
		Return Nothing
	End Function

	Protected Overrides Function GetUpdateCommand() As IDbCommand
		Return Nothing
	End Function

	Protected Overrides Function GetDeleteCommand() As IDbCommand
		Return Nothing
	End Function

End Class



